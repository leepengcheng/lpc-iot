<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.10">
  <POU Name="MAIN" Id="{ac002873-776d-4096-82aa-e6da7e9c1d13}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN

VAR
	//VREP 控制数据
	traj_cmd                :UINT:=CONST.TRAJ_CMD_STOP; //命令
	traj_step               :UINT:=1;//轨迹的步长
	traj_size               :UDINT:=0;            //轨迹点的个数
	traj_index              :UDINT:=0;
	traj_path               :TRAJECTORY; //轨迹路径点：固定10000个点，间隔1ms(上位机指定)
	
	//机器人状态反馈
	robo_status            :ROBOT_STATUS;
	
	j: INT;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[

//上报机器人状态和关节位置()
SEND_ROBOT_STATUS();


//每个循环读取指令和轨迹点
traj_cmd:=traj_path.cmd;   //控制命令CMD


CASE traj_cmd OF
CONST.TRAJ_CMD_NEW:   //初始化：读取变量然后将原来的cmd改为START(或PAUSE)
	//traj_index和traj_step只会在此处读取！
	traj_size:=traj_path.size; 
	traj_index:=traj_path.index; 
	traj_step:=traj_path.step;  //步长1ms默认
	traj_path.cmd:=CONST.TRAJ_CMD_PAUSE;  //修改traj_path为PAUSE

	FUNC_NEW(); //接口实现:新路径
CONST.TRAJ_CMD_START:
	IF traj_index>=traj_size THEN
		traj_cmd:=CONST.TRAJ_CMD_STOP;
	END_IF
	robo_status.inMotion:=CONST.ROBO_STATUS_TRUE;//正在运动
	traj_index:=traj_index+1;
	FOR j:=1 TO 7 BY 1 DO
	   //traj_path.points[traj_index].joints[j]:轨迹点1的关节J的数据
	END_FOR
	FUNC_START(); //接口实现:开始运动
CONST.TRAJ_CMD_STOP:    
	traj_size:=0;
	traj_index:=0;
	traj_path.cmd:=CONST.TRAJ_CMD_PAUSE;  //设置为STOP  
	robo_status.inMotion:=CONST.ROBO_STATUS_FALSE;//停止运动
	FUNC_PAUSE(); //接口实现:停止运动
ELSE
	//暂停时不改变size和index
	robo_status.inMotion:=CONST.ROBO_STATUS_FALSE;//停止运动
	FUNC_PAUSE(); //接口实现:暂停运行哦那个
END_CASE;]]></ST>
    </Implementation>
    <Method Name="FUNC_NEW" Id="{3b81f3bf-14d6-4fdb-8b02-41108e9f285e}">
      <Declaration><![CDATA[METHOD FUNC_NEW : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FUNC_NEW:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FUNC_PAUSE" Id="{ca910c87-f492-4990-9fa0-a89a1479629b}">
      <Declaration><![CDATA[METHOD FUNC_PAUSE : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FUNC_PAUSE:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FUNC_START" Id="{48e39737-4ecd-4020-aa89-aa619a91e082}">
      <Declaration><![CDATA[METHOD FUNC_START : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FUNC_START:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FUNC_STOP" Id="{610863c3-f972-4b7e-bfe9-0199e689b5e8}">
      <Declaration><![CDATA[METHOD FUNC_STOP : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FUNC_STOP:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SEND_ROBOT_STATUS" Id="{bfd4cb1c-6fb6-4199-a13c-dfb42e77cf72}">
      <Declaration><![CDATA[METHOD SEND_ROBOT_STATUS : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[robo_status.driverPowered:=CONST.ROBO_STATUS_TRUE;//驱动上电
robo_status.eStopped:=CONST.ROBO_STATUS_FALSE;//未意外停止
robo_status.inError:=CONST.ROBO_STATUS_FALSE;//未发生错误
//robo_status.inMotion:=CONST.ROBO_STATUS_FALSE;//正在运动
robo_status.motionPossible:=CONST.ROBO_STATUS_TRUE;//可以运动
robo_status.errorCode:=CONST.ROBO_ERRORCODE_NONE;//错误码


//关节位置:从私服驱动中读取
robo_status.position.joints[0]:=SIN(traj_index*0.0001)+1.0;
robo_status.position.joints[1]:=SIN(traj_index*0.0001)+2.0;
robo_status.position.joints[2]:=SIN(traj_index*0.0001)+3.0;
robo_status.position.joints[3]:=SIN(traj_index*0.0001)+4.0;
robo_status.position.joints[4]:=SIN(traj_index*0.0001)+5.0;
robo_status.position.joints[5]:=SIN(traj_index*0.0001)+6.0;
robo_status.position.joints[6]:=SIN(traj_index*0.0001)+7.0;


SEND_ROBOT_STATUS:=TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="MAIN">
      <LineId Id="469" Count="0" />
      <LineId Id="632" Count="1" />
      <LineId Id="629" Count="1" />
      <LineId Id="635" Count="0" />
      <LineId Id="631" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="645" Count="0" />
      <LineId Id="582" Count="0" />
      <LineId Id="667" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="669" Count="0" />
      <LineId Id="647" Count="1" />
      <LineId Id="646" Count="0" />
      <LineId Id="651" Count="0" />
      <LineId Id="664" Count="0" />
      <LineId Id="591" Count="1" />
      <LineId Id="686" Count="1" />
      <LineId Id="685" Count="0" />
      <LineId Id="668" Count="0" />
      <LineId Id="608" Count="0" />
      <LineId Id="703" Count="2" />
      <LineId Id="594" Count="0" />
      <LineId Id="601" Count="0" />
      <LineId Id="654" Count="1" />
      <LineId Id="652" Count="0" />
      <LineId Id="660" Count="0" />
      <LineId Id="600" Count="0" />
      <LineId Id="641" Count="0" />
      <LineId Id="657" Count="0" />
      <LineId Id="661" Count="0" />
      <LineId Id="597" Count="0" />
      <LineId Id="587" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.FUNC_NEW">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.FUNC_PAUSE">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.FUNC_START">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.FUNC_STOP">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.SEND_ROBOT_STATUS">
      <LineId Id="5" Count="3" />
      <LineId Id="20" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="17" Count="0" />
      <LineId Id="10" Count="6" />
      <LineId Id="22" Count="1" />
      <LineId Id="21" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>